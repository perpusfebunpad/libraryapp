version: "3.8"
services:
  db:
    image: mysql:5.7.37-debian
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - database-data:/var/lib/mysql
    networks:
      - backend
    restart: unless-stopped

  app:
    image: personal-web
    build:
      args:
        user: ${DB_USERNAME}
        uid: 1000
      context: .
      dockerfile: Dockerfile
    working_dir: /var/www
    # volumes:
    #   - ./:/var/www
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=https://${APP_SUBDOMAIN}.${APP_DOMAIN}
      - LOG_CHANNEL=${LOG_CHANNEL}
      - LOG_DEPRECATIONS_CHANNEL=${LOG_DEPRECATIONS_CHANNEL}
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - BROADCAST_DRIVER=${BROADCAST_DRIVER}
      - CACHE_DRIVER=${CACHE_DRIVER}
      - FILESYSTEM_DISK=${FILESYSTEM_DISK}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
      - SESSION_DRIVER=${SESSION_DRIVER}
      - SESSION_LIFETIME=${SESSION_LIFETIME}
      - MEMCACHED_HOST=${MEMCACHED_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_USE_PATH_STYLE_ENDPOINT=${AWS_USE_PATH_STYLE_ENDPOINT}
      - PUSHER_APP_ID=${PUSHER_APP_ID}
      - PUSHER_APP_KEY=${PUSHER_APP_KEY}
      - PUSHER_APP_SECRET=${PUSHER_APP_SECRET}
      - PUSHER_HOST=${PUSHER_HOST}
      - PUSHER_PORT=${PUSHER_PORT}
      - PUSHER_SCHEME=${PUSHER_SCHEME}
      - PUSHER_APP_CLUSTER=${PUSHER_APP_CLUSTER}
      - VITE_PUSHER_APP_KEY=${VITE_PUSHER_APP_KEY}
      - VITE_PUSHER_HOST=${VITE_PUSHER_HOST}
      - VITE_PUSHER_PORT=${VITE_PUSHER_PORT}
      - VITE_PUSHER_SCHEME=${VITE_PUSHER_SCHEME}
      - VITE_PUSHER_APP_CLUSTER=${VITE_PUSHER_APP_CLUSTER}
    networks:
      - backend
    restart: unless-stopped
    depends_on:
      - db

  nginx:
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - 8001:8001
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - backend
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${APP_SUBDOMAIN}.entrypoints=websecure"
      - "traefik.http.routers.${APP_SUBDOMAIN}.rule=Host(`${APP_SUBDOMAIN}.${APP_DOMAIN}`)"
      - "traefik.http.services.${APP_SUBDOMAIN}.loadbalancer.server.scheme=http"
      - "traefik.http.services.${APP_SUBDOMAIN}.loadbalancer.server.port=8001"
      - "traefik.http.services.${APP_SUBDOMAIN}.loadbalancer.passhostheader=true"
      - "traefik.http.services.${APP_SUBDOMAIN}.loadbalancer.sticky=true"
      - "traefik.http.services.${APP_SUBDOMAIN}.loadbalancer.sticky.cookie.name=${APP_SUBDOMAIN}StickyCookie"
      - "traefik.http.services.${APP_SUBDOMAIN}.loadbalancer.sticky.cookie.secure=true"

volumes:
  database-data: ~
  storage:
  
networks:
  reverse-proxy:
    external: true
  backend:
    internal: true
